apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.kpi.clientx"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 6
        versionName "1.0.6"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        def isBuildAll = (buildMain as boolean) && (buildTest as boolean)

        buildConfigField 'boolean', 'DEBUG_ALL', isBuildAll.toString()
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
        //此风味是为了使用Instant Run
        /*productFlavors {
            dev {
                // To avoid using legacy multidex, set minSdkVersion to 21 or higher.
                minSdkVersion 21
                versionNameSuffix "-dev"
                applicationIdSuffix '.dev'
            }
        }*/

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi'//, 'x86'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        //信鸽推送配置
        manifestPlaceholders = [

                //绩时查的
//                XG_ACCESS_ID: "2100340343",
//                XG_ACCESS_KEY: "A5H8AVTC721L",


                //我自己测试的
                XG_ACCESS_ID: "2100343298",
                XG_ACCESS_KEY: "AYTNS831P48Z",

                //如果需要华为通道，则加上华为的APPID
                HW_APPID: "101023227",
                //如果需要加入小米通道，则加上应用包名
                PACKAGE_NAME : "com.kpi.client"
        ]

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //强制使用27.0.2的support库
    configurations.all {
        resolutionStrategy.force "com.android.support:support-v4:27.0.2"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes {
//        release {
//            // 是否进行混淆
//            minifyEnabled false
//            shrinkResources false
//            // 混淆文件的位置
//            signingConfig signingConfigs.debug
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),'proguard-rules.pro'
//        }
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            // 混淆文件的位置
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            storeFile file('bhgx2014.bhgx2014')
            storePassword "bhgx2014"
            keyAlias "jkx"
            keyPassword "bhgx2014"
        }


    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    api "com.alibaba:arouter-api:$rootProject.arouterVersion"
    if (project.buildMain as boolean) {
        implementation project(':main')
    }
    if (project.buildTest as boolean) {
        implementation project(':testmodule')
    }
    api project(':app_common')
    //信鸽jar，不包含厂商通道
    implementation 'com.tencent.xinge:xinge:4.3.5-release'
    //jg包
    implementation 'com.tencent.jg:jg:1.1'
    //wup包
    implementation 'com.tencent.wup:wup:1.0.0.E-Release'
    //mid包，minSdkVersion 14
    implementation 'com.tencent.mid:mid:4.0.7-Release'
    implementation 'com.tencent.xinge:mipush:4.3.2-xiaomi-release'
    implementation 'com.tencent.xinge:xgmz:4.3.2-meizu-release'
    implementation 'com.tencent.xinge:xghw:4.3.2-huawei-release'
    //#信鸽结束
    //#分包
    implementation 'com.android.support:multidex:1.0.3'

}
